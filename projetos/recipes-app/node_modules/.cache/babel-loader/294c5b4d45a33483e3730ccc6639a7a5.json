{"ast":null,"code":"var _jsxFileName = \"/home/jederson/trybe/project-recipes/src/pages/RecipesInProgress.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\nimport whiteHeartIcon from \"../images/whiteHeartIcon.svg\";\nimport '../styles/details.css';\n\nfunction RecipesInProgress() {\n  const location = useLocation().pathname;\n  const [recipeInProgress, setRecipeInProgress] = useState([]);\n  const [isDisabled, setDisabled] = useState(true);\n  const [isFetching, setFetching] = useState(true);\n  const [favoriteRecipe, setFavoriteRecipe] = useState(false);\n  let allCheckedIngredients = [];\n\n  if (localStorage.getItem('checkedIngredients')) {\n    allCheckedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n  }\n\n  const localStorageFavs = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const allDoneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const history = useHistory();\n  const zero = 0;\n  const ten = 10;\n\n  const fetchRecipesInProgress = async () => {\n    const splitUrl = location.split('/');\n    const id = splitUrl[2];\n\n    if (location.includes('comidas')) {\n      const apiRequest = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.meals[0]);\n\n      if (localStorageFavs) {\n        localStorageFavs.forEach(item => {\n          if (item.id === apiResponse.meals[0].idMeal) {\n            setFavoriteRecipe(true);\n          }\n        });\n      }\n    } else {\n      const apiRequest = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.drinks[0]);\n\n      if (localStorageFavs) {\n        localStorageFavs.forEach(item => {\n          if (item.id === apiResponse.drinks[0].idDrink) {\n            setFavoriteRecipe(true);\n          }\n        });\n      }\n    }\n  };\n\n  const renderLoading = () => /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }\n  }, \"Loading...\");\n\n  useEffect(() => {\n    setFetching(true);\n    fetchRecipesInProgress();\n    setFetching(false);\n  }, []);\n\n  const handleClick = () => {\n    let tags = [];\n\n    if (recipeInProgress.strTags) {\n      tags = recipeInProgress.strTags.split(',');\n    }\n\n    console.log(recipeInProgress.strTags);\n    console.log(typeof tags);\n    console.log(tags);\n    const newDoneRecipe = {\n      id: recipeInProgress.idMeal ? recipeInProgress.idMeal : recipeInProgress.idDrink,\n      type: recipeInProgress.idMeal ? 'comida' : 'bebida',\n      area: recipeInProgress.strArea,\n      category: recipeInProgress.strCategory,\n      alcoholicOrNot: recipeInProgress.idMeal ? recipeInProgress.strAlcoholic : '',\n      name: recipeInProgress.strMeal ? recipeInProgress.strMeal : recipeInProgress.strDrink,\n      image: recipeInProgress.strMealThumb ? recipeInProgress.strMealThumb : recipeInProgress.strDrinkThumb,\n      doneDate: `Feita em : ${new Date().toJSON().slice(zero, ten).replace(/-/g, '/')}`,\n      tags\n    };\n\n    if (!allDoneRecipes) {\n      localStorage.setItem('doneRecipes', JSON.stringify([newDoneRecipe]));\n    } else {\n      localStorage.setItem('doneRecipes', JSON.stringify([...allDoneRecipes, newDoneRecipe]));\n    }\n\n    history.push('/receitas-feitas');\n  };\n\n  const handleIngredients = index => {\n    const ingredientMade = document.getElementById(`${index}-ingredient`);\n\n    if (ingredientMade.style.cssText === 'text-decoration: line-through;') {\n      ingredientMade.style = 'text-decoration: none';\n      allCheckedIngredients.forEach((ingredient, i) => {\n        if (ingredient === ingredientMade.innerHTML) {\n          allCheckedIngredients.splice(i, 1);\n          localStorage.setItem('checkedIngredients', JSON.stringify(allCheckedIngredients));\n        }\n      });\n    } else {\n      ingredientMade.style = 'text-decoration: line-through';\n      allCheckedIngredients.push(ingredientMade.innerHTML);\n      localStorage.setItem('checkedIngredients', JSON.stringify(allCheckedIngredients));\n    }\n\n    const allCheckBoxs = document.querySelectorAll('#checkbox');\n    let count = zero;\n    allCheckBoxs.forEach(checkbox => {\n      if (checkbox.checked === true) {\n        count += 1;\n      }\n    });\n\n    if (allCheckBoxs.length === count) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  const renderIngredients = recipeData => {\n    const arrayIngredients = [];\n    const maxIngredients = 20;\n\n    for (let index = 1; index <= maxIngredients; index += 1) {\n      if (recipeData[`strIngredient${index}`] !== '' && recipeData[`strIngredient${index}`] !== null && recipeData[`strIngredient${index}`] !== undefined) {\n        arrayIngredients.push({\n          ingredient: recipeData[`strIngredient${index}`],\n          measure: recipeData[`strMeasure${index}`]\n        });\n      }\n    }\n\n    return arrayIngredients;\n  };\n\n  const allIngredients = renderIngredients(recipeInProgress);\n\n  const handleShareIcon = (idRecipe, path) => {\n    const fullPath = `http://localhost:3000/${path}/${idRecipe}`;\n    const tempElement = document.createElement('textarea');\n    tempElement.value = fullPath;\n    tempElement.setAttribute('readonly', '');\n    tempElement.style.position = 'absolute';\n    tempElement.style.left = '-9999px';\n    document.body.appendChild(tempElement);\n    tempElement.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempElement);\n    const linkCopy = document.createElement('p');\n    linkCopy.innerHTML = 'Link copiado!';\n    document.querySelector('.buttons').appendChild(linkCopy);\n  };\n\n  const handleFavoriteRecipes = () => {\n    let newFavRecipe = {};\n\n    if (location.includes('comidas')) {\n      newFavRecipe = {\n        id: recipeInProgress.idMeal,\n        type: 'comida',\n        area: recipeInProgress.strArea,\n        category: recipeInProgress.strCategory,\n        alcoholicOrNot: '',\n        name: recipeInProgress.strMeal,\n        image: recipeInProgress.strMealThumb\n      };\n    } else {\n      newFavRecipe = {\n        id: recipeInProgress.idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipeInProgress.strCategory,\n        alcoholicOrNot: recipeInProgress.strAlcoholic,\n        name: recipeInProgress.strDrink,\n        image: recipeInProgress.strDrinkThumb\n      };\n    }\n\n    if (!favoriteRecipe) {\n      if (!localStorageFavs) {\n        localStorage.setItem('favoriteRecipes', JSON.stringify([newFavRecipe]));\n      } else {\n        localStorage.setItem('favoriteRecipes', JSON.stringify([...localStorageFavs, newFavRecipe]));\n      }\n\n      setFavoriteRecipe(true);\n    } else {\n      localStorageFavs.forEach((item, index) => {\n        if (item.id === newFavRecipe.id) {\n          localStorageFavs.splice(index, 1);\n          localStorage.setItem('favoriteRecipes', JSON.stringify(localStorageFavs));\n        }\n      });\n      setFavoriteRecipe(false);\n    }\n  };\n\n  const renderFood = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: recipeInProgress.strMealThumb,\n    alt: \"recipe-meal\",\n    className: \"img-card-details\" // width=\"200px\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strMeal), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share icon\",\n    onClick: () => handleShareIcon(recipeInProgress.idMeal, 'comidas'),\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favoriteRecipe ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favorite icon\",\n    onClick: handleFavoriteRecipes,\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strCategory), allIngredients.map((ingredient, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"checkbox\",\n    onChange: () => handleIngredients(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: `${index}-ingredient`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, `${ingredient.ingredient}: ${ingredient.measure === null ? 'a gosto' : ingredient.measure}`))), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: handleClick,\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"));\n\n  const renderDrink = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: recipeInProgress.strDrinkThumb,\n    alt: \"recipe-drink\",\n    className: \"img-card-details\" // width=\"200px\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strDrink), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share icon\",\n    onClick: () => handleShareIcon(recipeInProgress.idDrink, 'bebidas'),\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: favoriteRecipe ? blackHeartIcon : whiteHeartIcon,\n    alt: \"favorite icon\",\n    onClick: handleFavoriteRecipes,\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strAlcoholic), allIngredients.map((ingredient, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    id: \"checkbox\",\n    onChange: () => handleIngredients(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    id: `${index}-ingredient`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 11\n    }\n  }, `${ingredient.ingredient}: ${ingredient.measure === null ? 'a gosto' : ingredient.measure}`))), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: handleClick,\n    disabled: isDisabled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"));\n\n  const renderRecipes = () => location.includes('comidas') ? renderFood() : renderDrink();\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 5\n    }\n  }, isFetching ? renderLoading() : renderRecipes());\n}\n\nexport default RecipesInProgress;","map":{"version":3,"sources":["/home/jederson/trybe/project-recipes/src/pages/RecipesInProgress.js"],"names":["React","useEffect","useState","useHistory","useLocation","RecipesInProgress","location","pathname","recipeInProgress","setRecipeInProgress","isDisabled","setDisabled","isFetching","setFetching","favoriteRecipe","setFavoriteRecipe","allCheckedIngredients","localStorage","getItem","JSON","parse","localStorageFavs","allDoneRecipes","history","zero","ten","fetchRecipesInProgress","splitUrl","split","id","includes","apiRequest","fetch","apiResponse","json","meals","forEach","item","idMeal","drinks","idDrink","renderLoading","handleClick","tags","strTags","console","log","newDoneRecipe","type","area","strArea","category","strCategory","alcoholicOrNot","strAlcoholic","name","strMeal","strDrink","image","strMealThumb","strDrinkThumb","doneDate","Date","toJSON","slice","replace","setItem","stringify","push","handleIngredients","index","ingredientMade","document","getElementById","style","cssText","ingredient","i","innerHTML","splice","allCheckBoxs","querySelectorAll","count","checkbox","checked","length","renderIngredients","recipeData","arrayIngredients","maxIngredients","undefined","measure","allIngredients","handleShareIcon","idRecipe","path","fullPath","tempElement","createElement","value","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","linkCopy","querySelector","handleFavoriteRecipes","newFavRecipe","renderFood","shareIcon","blackHeartIcon","whiteHeartIcon","map","strInstructions","renderDrink","renderRecipes"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\nimport whiteHeartIcon from '../images/whiteHeartIcon.svg';\nimport '../styles/details.css';\n\nfunction RecipesInProgress() {\n  const location = useLocation().pathname;\n  const [recipeInProgress, setRecipeInProgress] = useState([]);\n  const [isDisabled, setDisabled] = useState(true);\n  const [isFetching, setFetching] = useState(true);\n  const [favoriteRecipe, setFavoriteRecipe] = useState(false);\n  let allCheckedIngredients = [];\n  if (localStorage.getItem('checkedIngredients')) {\n    allCheckedIngredients = JSON.parse(localStorage.getItem('checkedIngredients'));\n  }\n  const localStorageFavs = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  const allDoneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  const history = useHistory();\n  const zero = 0;\n  const ten = 10;\n\n  const fetchRecipesInProgress = async () => {\n    const splitUrl = location.split('/');\n    const id = splitUrl[2];\n    if (location.includes('comidas')) {\n      const apiRequest = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.meals[0]);\n      if (localStorageFavs) {\n        localStorageFavs.forEach((item) => {\n          if (item.id === apiResponse.meals[0].idMeal) {\n            setFavoriteRecipe(true);\n          }\n        });\n      }\n    } else {\n      const apiRequest = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.drinks[0]);\n      if (localStorageFavs) {\n        localStorageFavs.forEach((item) => {\n          if (item.id === apiResponse.drinks[0].idDrink) {\n            setFavoriteRecipe(true);\n          }\n        });\n      }\n    }\n  };\n\n  const renderLoading = () => <h1>Loading...</h1>;\n\n  useEffect(() => {\n    setFetching(true);\n    fetchRecipesInProgress();\n    setFetching(false);\n  }, []);\n\n  const handleClick = () => {\n    let tags = [];\n    if (recipeInProgress.strTags) {\n      tags = recipeInProgress.strTags.split(',');\n    }\n    console.log(recipeInProgress.strTags);\n    console.log(typeof tags);\n    console.log(tags);\n    const newDoneRecipe = {\n      id: recipeInProgress.idMeal ? recipeInProgress.idMeal : recipeInProgress.idDrink,\n      type: recipeInProgress.idMeal ? 'comida' : 'bebida',\n      area: recipeInProgress.strArea,\n      category: recipeInProgress.strCategory,\n      alcoholicOrNot: recipeInProgress.idMeal ? recipeInProgress.strAlcoholic : '',\n      name: recipeInProgress.strMeal ? recipeInProgress.strMeal\n        : recipeInProgress.strDrink,\n      image: recipeInProgress.strMealThumb ? recipeInProgress.strMealThumb\n        : recipeInProgress.strDrinkThumb,\n      doneDate: `Feita em : ${new Date().toJSON().slice(zero, ten).replace(/-/g, '/')}`,\n      tags,\n    };\n\n    if (!allDoneRecipes) {\n      localStorage.setItem('doneRecipes', JSON.stringify([newDoneRecipe]));\n    } else {\n      localStorage.setItem('doneRecipes',\n        JSON.stringify([...allDoneRecipes, newDoneRecipe]));\n    }\n    history.push('/receitas-feitas');\n  };\n\n  const handleIngredients = (index) => {\n    const ingredientMade = document.getElementById(`${index}-ingredient`);\n\n    if (ingredientMade.style.cssText === 'text-decoration: line-through;') {\n      ingredientMade.style = 'text-decoration: none';\n      allCheckedIngredients.forEach((ingredient, i) => {\n        if (ingredient === ingredientMade.innerHTML) {\n          allCheckedIngredients.splice(i, 1);\n          localStorage.setItem('checkedIngredients',\n            JSON.stringify(allCheckedIngredients));\n        }\n      });\n    } else {\n      ingredientMade.style = 'text-decoration: line-through';\n      allCheckedIngredients.push(ingredientMade.innerHTML);\n      localStorage.setItem('checkedIngredients', JSON.stringify(allCheckedIngredients));\n    }\n    const allCheckBoxs = document.querySelectorAll('#checkbox');\n    let count = zero;\n    allCheckBoxs.forEach((checkbox) => {\n      if (checkbox.checked === true) {\n        count += 1;\n      }\n    });\n    if (allCheckBoxs.length === count) {\n      setDisabled(false);\n    } else {\n      setDisabled(true);\n    }\n  };\n\n  const renderIngredients = (recipeData) => {\n    const arrayIngredients = [];\n    const maxIngredients = 20;\n\n    for (let index = 1; index <= maxIngredients; index += 1) {\n      if (recipeData[`strIngredient${index}`] !== ''\n      && recipeData[`strIngredient${index}`] !== null\n      && recipeData[`strIngredient${index}`] !== undefined\n      ) {\n        arrayIngredients.push({\n          ingredient: recipeData[`strIngredient${index}`],\n          measure: recipeData[`strMeasure${index}`],\n        });\n      }\n    }\n    return arrayIngredients;\n  };\n\n  const allIngredients = renderIngredients(recipeInProgress);\n\n  const handleShareIcon = (idRecipe, path) => {\n    const fullPath = `http://localhost:3000/${path}/${idRecipe}`;\n    const tempElement = document.createElement('textarea');\n    tempElement.value = fullPath;\n    tempElement.setAttribute('readonly', '');\n    tempElement.style.position = 'absolute';\n    tempElement.style.left = '-9999px';\n    document.body.appendChild(tempElement);\n    tempElement.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempElement);\n    const linkCopy = document.createElement('p');\n    linkCopy.innerHTML = 'Link copiado!';\n    document.querySelector('.buttons').appendChild(linkCopy);\n  };\n\n  const handleFavoriteRecipes = () => {\n    let newFavRecipe = {};\n    if (location.includes('comidas')) {\n      newFavRecipe = {\n        id: recipeInProgress.idMeal,\n        type: 'comida',\n        area: recipeInProgress.strArea,\n        category: recipeInProgress.strCategory,\n        alcoholicOrNot: '',\n        name: recipeInProgress.strMeal,\n        image: recipeInProgress.strMealThumb,\n      };\n    } else {\n      newFavRecipe = {\n        id: recipeInProgress.idDrink,\n        type: 'bebida',\n        area: '',\n        category: recipeInProgress.strCategory,\n        alcoholicOrNot: recipeInProgress.strAlcoholic,\n        name: recipeInProgress.strDrink,\n        image: recipeInProgress.strDrinkThumb,\n      };\n    }\n    if (!favoriteRecipe) {\n      if (!localStorageFavs) {\n        localStorage.setItem('favoriteRecipes', JSON.stringify([newFavRecipe]));\n      } else {\n        localStorage.setItem('favoriteRecipes',\n          JSON.stringify([...localStorageFavs, newFavRecipe]));\n      }\n      setFavoriteRecipe(true);\n    } else {\n      localStorageFavs.forEach((item, index) => {\n        if (item.id === newFavRecipe.id) {\n          localStorageFavs.splice(index, 1);\n          localStorage.setItem('favoriteRecipes', JSON.stringify(localStorageFavs));\n        }\n      });\n      setFavoriteRecipe(false);\n    }\n  };\n\n  const renderFood = () => (\n    <div className=\"details-container\">\n      <img\n        data-testid=\"recipe-photo\"\n        src={ recipeInProgress.strMealThumb }\n        alt=\"recipe-meal\"\n        className=\"img-card-details\"\n        // width=\"200px\"\n      />\n      <h2 data-testid=\"recipe-title\">{ recipeInProgress.strMeal }</h2>\n      <div className=\"buttons\">\n        <img\n          data-testid=\"share-btn\"\n          src={ shareIcon }\n          alt=\"share icon\"\n          onClick={ () => handleShareIcon(recipeInProgress.idMeal, 'comidas') }\n          aria-hidden=\"true\"\n        />\n        <img\n          data-testid=\"favorite-btn\"\n          src={ favoriteRecipe ? blackHeartIcon : whiteHeartIcon }\n          alt=\"favorite icon\"\n          onClick={ handleFavoriteRecipes }\n          aria-hidden=\"true\"\n        />\n      </div>\n      <h3 data-testid=\"recipe-category\">{ recipeInProgress.strCategory }</h3>\n      {allIngredients.map((ingredient, index) => (\n        <div\n          key={ index }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <input\n            type=\"checkbox\"\n            id=\"checkbox\"\n            onChange={ () => handleIngredients(index) }\n          />\n          <p id={ `${index}-ingredient` }>\n            {`${ingredient.ingredient}: ${(ingredient.measure === null)\n              ? 'a gosto'\n              : ingredient.measure}`}\n          </p>\n        </div>\n      ))}\n      <span data-testid=\"instructions\">{ recipeInProgress.strInstructions }</span>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ handleClick }\n        disabled={ isDisabled }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n\n  const renderDrink = () => (\n    <div className=\"details-container\">\n      <img\n        data-testid=\"recipe-photo\"\n        src={ recipeInProgress.strDrinkThumb }\n        alt=\"recipe-drink\"\n        className=\"img-card-details\"\n        // width=\"200px\"\n      />\n      <h2 data-testid=\"recipe-title\">{ recipeInProgress.strDrink }</h2>\n      <div className=\"buttons\">\n        <img\n          data-testid=\"share-btn\"\n          src={ shareIcon }\n          alt=\"share icon\"\n          onClick={ () => handleShareIcon(recipeInProgress.idDrink, 'bebidas') }\n          aria-hidden=\"true\"\n        />\n        <img\n          data-testid=\"favorite-btn\"\n          src={ favoriteRecipe ? blackHeartIcon : whiteHeartIcon }\n          alt=\"favorite icon\"\n          onClick={ handleFavoriteRecipes }\n          aria-hidden=\"true\"\n        />\n      </div>\n      <h3 data-testid=\"recipe-category\">{ recipeInProgress.strAlcoholic }</h3>\n      {allIngredients.map((ingredient, index) => (\n        <div\n          key={ index }\n          data-testid={ `${index}-ingredient-step` }\n        >\n          <input\n            type=\"checkbox\"\n            id=\"checkbox\"\n            onChange={ () => handleIngredients(index) }\n          />\n          <p id={ `${index}-ingredient` }>\n            {`${ingredient.ingredient}: ${(ingredient.measure === null)\n              ? 'a gosto'\n              : ingredient.measure}`}\n          </p>\n        </div>\n      ))}\n      <span data-testid=\"instructions\">{ recipeInProgress.strInstructions }</span>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={ handleClick }\n        disabled={ isDisabled }\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  );\n\n  const renderRecipes = () => (\n    (location.includes('comidas')) ? (renderFood()) : (renderDrink())\n  );\n\n  return (\n    <div>\n      {isFetching ? renderLoading() : renderRecipes() }\n    </div>\n  );\n}\n\nexport default RecipesInProgress;\n"]},"metadata":{},"sourceType":"module"}