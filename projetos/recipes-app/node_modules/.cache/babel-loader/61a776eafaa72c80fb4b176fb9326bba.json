{"ast":null,"code":"var _jsxFileName = \"/home/jederson/trybe/project-recipes/src/components/SearchBar.js\";\nimport React, { useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ContextRecipes from '../context/ContextRecipes';\n\nfunction SearchBar(props) {\n  const {\n    fetchApi\n  } = props;\n  const {\n    setSelectedRadio,\n    setSearchText,\n    setIdRecipe,\n    setRecipes\n  } = useContext(ContextRecipes);\n  const location = useLocation().pathname;\n  const history = useHistory();\n\n  const renderCards = recipeApi => {\n    if (recipeApi === null) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    } else if (recipeApi.length === 1) {\n      if (location === '/comidas') {\n        const idRecipe = recipeApi[0].idMeal;\n        setIdRecipe(idRecipe);\n        history.push(`/comidas/${idRecipe}`);\n      } else {\n        const idRecipe = recipeApi[0].idDrink;\n        setIdRecipe(idRecipe);\n        history.push(`/bebidas/${idRecipe}`);\n      }\n    }\n  };\n\n  const handleClick = async () => {\n    const selectedRadio = document.querySelector('input[name=\"search\"]:checked').value;\n    const inputSearch = document.querySelector('#search-input').value;\n    const recipesApi = await fetchApi(selectedRadio, inputSearch);\n    console.log(recipesApi);\n    setSearchText(inputSearch);\n    setSelectedRadio(selectedRadio);\n    renderCards(recipesApi);\n\n    if (recipesApi !== null) {\n      setRecipes(recipesApi);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    \"data-testid\": \"search-input\",\n    id: \"search-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Ingrediente\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"ingredient\",\n    name: \"search\",\n    \"data-testid\": \"ingredient-search-radio\",\n    id: \"ingredient\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Nome\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"name\",\n    name: \"search\",\n    \"data-testid\": \"name-search-radio\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"first-letter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Primeira letra\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    value: \"first-letter\",\n    name: \"search\",\n    \"data-testid\": \"first-letter-search-radio\",\n    id: \"first-letter\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"exec-search-btn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, \"Buscar\"));\n}\n\nSearchBar.propTypes = {\n  fetchApi: PropTypes.func.isRequired\n};\nexport default SearchBar;","map":{"version":3,"sources":["/home/jederson/trybe/project-recipes/src/components/SearchBar.js"],"names":["React","useContext","useLocation","useHistory","PropTypes","ContextRecipes","SearchBar","props","fetchApi","setSelectedRadio","setSearchText","setIdRecipe","setRecipes","location","pathname","history","renderCards","recipeApi","alert","length","idRecipe","idMeal","push","idDrink","handleClick","selectedRadio","document","querySelector","value","inputSearch","recipesApi","console","log","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ContextRecipes from '../context/ContextRecipes';\n\nfunction SearchBar(props) {\n  const { fetchApi } = props;\n  const {\n    setSelectedRadio, setSearchText, setIdRecipe, setRecipes,\n  } = useContext(ContextRecipes);\n\n  const location = useLocation().pathname;\n\n  const history = useHistory();\n\n  const renderCards = (recipeApi) => {\n    if (recipeApi === null) {\n      alert('Sinto muito, não encontramos nenhuma receita para esses filtros.');\n    } else if (recipeApi.length === 1) {\n      if (location === '/comidas') {\n        const idRecipe = recipeApi[0].idMeal;\n        setIdRecipe(idRecipe);\n        history.push(`/comidas/${idRecipe}`);\n      } else {\n        const idRecipe = recipeApi[0].idDrink;\n        setIdRecipe(idRecipe);\n        history.push(`/bebidas/${idRecipe}`);\n      }\n    }\n  };\n\n  const handleClick = async () => {\n    const selectedRadio = document.querySelector('input[name=\"search\"]:checked').value;\n    const inputSearch = document.querySelector('#search-input').value;\n    const recipesApi = await fetchApi(selectedRadio, inputSearch);\n    console.log(recipesApi);\n    setSearchText(inputSearch);\n    setSelectedRadio(selectedRadio);\n    renderCards(recipesApi);\n    if (recipesApi !== null) {\n      setRecipes(recipesApi);\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"text\" data-testid=\"search-input\" id=\"search-input\" />\n      <label htmlFor=\"ingredient\">\n        Ingrediente\n        <input\n          type=\"radio\"\n          value=\"ingredient\"\n          name=\"search\"\n          data-testid=\"ingredient-search-radio\"\n          id=\"ingredient\"\n        />\n      </label>\n      <label htmlFor=\"name\">\n        Nome\n        <input\n          type=\"radio\"\n          value=\"name\"\n          name=\"search\"\n          data-testid=\"name-search-radio\"\n          id=\"name\"\n        />\n      </label>\n      <label htmlFor=\"first-letter\">\n        Primeira letra\n        <input\n          type=\"radio\"\n          value=\"first-letter\"\n          name=\"search\"\n          data-testid=\"first-letter-search-radio\"\n          id=\"first-letter\"\n        />\n      </label>\n      <button\n        type=\"button\"\n        data-testid=\"exec-search-btn\"\n        onClick={ handleClick }\n      >\n        Buscar\n      </button>\n    </div>\n  );\n}\n\nSearchBar.propTypes = {\n  fetchApi: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n"]},"metadata":{},"sourceType":"module"}