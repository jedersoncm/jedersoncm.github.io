{"ast":null,"code":"var _jsxFileName = \"/home/jederson/trybe/project-recipes/src/pages/RecipesInProgress.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport shareIcon from \"../images/shareIcon.svg\";\nimport blackHeartIcon from \"../images/blackHeartIcon.svg\";\n\nfunction RecipesInProgress() {\n  const location = useLocation().pathname;\n  const [recipeInProgress, setRecipeInProgress] = useState([]);\n  const [isFetching, setFetching] = useState(true);\n  const [ingredientDone, setIngredientDone] = useState(false);\n  const [idRecipe, setIdRecipe] = useState('');\n  const recipeInProgressLocal = Object.values(JSON.parse(localStorage.getItem('inProgressRecipes')));\n\n  const fetchRecipesInProgress = async () => {\n    const splitUrl = location.split('/');\n    const id = splitUrl[2];\n    setIdRecipe(id);\n\n    if (location.includes('comidas')) {\n      const apiRequest = await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.meals[0]);\n    } else {\n      const apiRequest = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?iid=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.drinks[0]);\n    }\n  };\n\n  const renderLoading = () => {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, \"Loading...\");\n  };\n\n  useEffect(() => {\n    setFetching(true);\n    fetchRecipesInProgress();\n    setFetching(false);\n  }, []);\n\n  const handleClick = () => {\n    console.log(recipeInProgressLocal);\n    console.log(idRecipe);\n    console.log(recipeInProgressLocal[0][idRecipe]);\n  };\n\n  const handleIngredients = index => {\n    const ingredientMade = document.querySelector(\"[id=\" + index + \"-ingredient-step]\");\n    console.log(ingredientMade); // if (ingredientDone) {\n    //   ingredientMade.style = { \"text-decoration\": 'line-through' }\n    //   setIngredientDone(false);\n    // } else {\n    //   ingredientMade.style = { \"text-decoration\": 'none' }\n    //   setIngredientDone(true);\n    // }\n  }; // const handleIngredients = (event) => {\n  //   const ingredientMade = event.target;\n  //   console.log(ingredientMade);\n  //   ingredientMade.style = { \"text-decoration\": 'line-through' };\n  // }\n\n\n  const renderFood = () => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"recipe-photo\",\n    src: recipeInProgress.strMealThumb,\n    alt: \"recipe-meal\",\n    width: \"200px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"recipe-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strMeal), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"share-btn\",\n    src: shareIcon,\n    alt: \"share icon\" //onClick={ handleShareIcon } // tratar\n    ,\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": \"favorite-btn\",\n    src: blackHeartIcon,\n    alt: \"favorite icon\" //onClick={ handleShareIcon } // tratar\n    ,\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": \"recipe-category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strCategory), recipeInProgressLocal[0][idRecipe].map((recipe, index) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    onChange: handleIngredients,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h5\", {\n    // className={ ingredientDone ? \"ingredient-done\" : \"ingredient-not-done\" }\n    id: `${index}-ingredient-step`,\n    \"data-testid\": `${index}-ingredient-step`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, `${recipe.ingredient} - ${recipe.measure}`))), /*#__PURE__*/React.createElement(\"span\", {\n    \"data-testid\": \"instructions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, recipeInProgress.strInstructions), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    \"data-testid\": \"finish-recipe-btn\",\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Finalizar Receita\"));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, isFetching ? renderLoading() : renderFood());\n}\n\nexport default RecipesInProgress;","map":{"version":3,"sources":["/home/jederson/trybe/project-recipes/src/pages/RecipesInProgress.js"],"names":["React","useEffect","useState","useLocation","RecipesInProgress","location","pathname","recipeInProgress","setRecipeInProgress","isFetching","setFetching","ingredientDone","setIngredientDone","idRecipe","setIdRecipe","recipeInProgressLocal","Object","values","JSON","parse","localStorage","getItem","fetchRecipesInProgress","splitUrl","split","id","includes","apiRequest","fetch","apiResponse","json","meals","drinks","renderLoading","handleClick","console","log","handleIngredients","index","ingredientMade","document","querySelector","renderFood","strMealThumb","strMeal","shareIcon","blackHeartIcon","strCategory","map","recipe","ingredient","measure","strInstructions"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport shareIcon from '../images/shareIcon.svg';\nimport blackHeartIcon from '../images/blackHeartIcon.svg';\n\nfunction RecipesInProgress() {\n  const location = useLocation().pathname;\n  const [recipeInProgress, setRecipeInProgress] = useState([]);\n  const [isFetching, setFetching] = useState(true);\n  const [ingredientDone, setIngredientDone] = useState(false);\n  const [idRecipe, setIdRecipe] = useState('');\n  const recipeInProgressLocal = Object.values(JSON.parse(localStorage.getItem('inProgressRecipes')));\n\n  const fetchRecipesInProgress = async () => {\n    const splitUrl = location.split('/');\n    const id = splitUrl[2];\n    setIdRecipe(id);\n    if(location.includes('comidas')) {\n      const apiRequest =  await fetch(`https://www.themealdb.com/api/json/v1/1/lookup.php?i=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.meals[0]);\n    } else {\n      const apiRequest =  await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?iid=${id}`);\n      const apiResponse = await apiRequest.json();\n      setRecipeInProgress(apiResponse.drinks[0]);\n    }\n  }\n\n  const renderLoading = () => {\n    return (<h1>Loading...</h1>)\n  };\n\n  useEffect(() => {\n    setFetching(true);\n    fetchRecipesInProgress();\n    setFetching(false);\n  }, []);\n\n  const handleClick = () => {\n    console.log(recipeInProgressLocal);\n    console.log(idRecipe);\n    console.log(recipeInProgressLocal[0][idRecipe]);\n  }\n\n  const handleIngredients = (index) => {\n    const ingredientMade = document.querySelector(\"[id=\" + index + \"-ingredient-step]\");\n    console.log(ingredientMade);\n\n    // if (ingredientDone) {\n    //   ingredientMade.style = { \"text-decoration\": 'line-through' }\n    //   setIngredientDone(false);\n    // } else {\n    //   ingredientMade.style = { \"text-decoration\": 'none' }\n    //   setIngredientDone(true);\n    // }\n  }\n\n  // const handleIngredients = (event) => {\n  //   const ingredientMade = event.target;\n  //   console.log(ingredientMade);\n  //   ingredientMade.style = { \"text-decoration\": 'line-through' };\n  // }\n\n  const renderFood = () => (\n    <div>\n      <img\n        data-testid=\"recipe-photo\"\n        src={ recipeInProgress.strMealThumb }\n        alt=\"recipe-meal\"\n        width='200px'\n      />\n      <h2 data-testid=\"recipe-title\">{ recipeInProgress.strMeal }</h2>\n      <img\n        data-testid=\"share-btn\"\n        src={ shareIcon }\n        alt=\"share icon\"\n        //onClick={ handleShareIcon } // tratar\n        aria-hidden=\"true\"\n      />\n      <img\n        data-testid=\"favorite-btn\"\n        src={ blackHeartIcon }\n        alt=\"favorite icon\"\n        //onClick={ handleShareIcon } // tratar\n        aria-hidden=\"true\"\n      />\n      <h3 data-testid=\"recipe-category\" >{ recipeInProgress.strCategory }</h3>\n      { recipeInProgressLocal[0][idRecipe].map((recipe, index) => (\n        <div>\n          {/* <label data-testid={ `${index}-ingredient-step` }>{ `${recipe.ingredient} - ${recipe.measure}` } */}\n            <input\n              type=\"checkbox\"\n              onChange={ handleIngredients }\n            />\n          {/* </label> */}\n          <h5\n            // className={ ingredientDone ? \"ingredient-done\" : \"ingredient-not-done\" }\n            id={ `${index}-ingredient-step` }\n            data-testid={ `${index}-ingredient-step` }\n          >\n            { `${recipe.ingredient} - ${recipe.measure}` }\n          </h5>\n        </div>\n      ))}\n      <span data-testid=\"instructions\">{ recipeInProgress.strInstructions }</span>\n      <button\n        type=\"button\"\n        data-testid=\"finish-recipe-btn\"\n        onClick={handleClick}\n      >\n        Finalizar Receita\n      </button>\n    </div>\n  )\n\n  return (\n    <div>\n      {/* {isFetching ? renderLoading() : ( location.includes('comidas') && renderFood() ) } */}\n      {isFetching ? renderLoading() : renderFood() }\n    </div>\n  )\n}\n\nexport default RecipesInProgress;\n"]},"metadata":{},"sourceType":"module"}