{"ast":null,"code":"var _jsxFileName = \"/home/jederson/trybe/project-recipes/src/components/Header.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ContextRecipes from '../context/ContextRecipes';\nimport profileIcon from \"../images/profileIcon.svg\";\nimport searchIcon from \"../images/searchIcon.svg\";\nimport SearchBar from './SearchBar';\nimport '../styles/login.css';\n\nfunction Header(props) {\n  const {\n    title,\n    fetchApi,\n    showSearchIcon = false\n  } = props;\n  const {\n    showSearchBar,\n    setSearchBar,\n    setTypeRecipe\n  } = useContext(ContextRecipes);\n  const location = useLocation().pathname;\n\n  const toggleSearchBar = () => {\n    if (showSearchBar) {\n      setSearchBar(false);\n    } else {\n      setSearchBar(true);\n    }\n  };\n\n  useEffect(() => {\n    if (location.includes('comidas')) {\n      setTypeRecipe('food');\n    } else {\n      setTypeRecipe('drink');\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: profileIcon,\n    alt: \"Profile\",\n    \"data-testid\": \"profile-top-btn\",\n    className: \"icon-perfil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"page-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, title), showSearchIcon ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: searchIcon,\n    alt: \"Search\",\n    \"data-testid\": \"search-top-btn\",\n    className: \"icon-search\",\n    onClick: toggleSearchBar,\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, showSearchBar ? /*#__PURE__*/React.createElement(SearchBar, {\n    fetchApi: fetchApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 26\n    }\n  }) : null));\n}\n\nHeader.propTypes = {\n  fetchApi: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  showSearchIcon: PropTypes.bool.isRequired\n};\nexport default Header;","map":{"version":3,"sources":["/home/jederson/trybe/project-recipes/src/components/Header.js"],"names":["React","useContext","useEffect","Link","useLocation","PropTypes","ContextRecipes","SearchBar","Header","props","title","fetchApi","showSearchIcon","showSearchBar","setSearchBar","setTypeRecipe","location","pathname","toggleSearchBar","includes","profileIcon","searchIcon","propTypes","func","isRequired","string","bool"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;;;AAGA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,qBAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmBC,IAAAA,cAAc,GAAG;AAApC,MAA8CH,KAApD;AACA,QAAM;AAAEI,IAAAA,aAAF;AAAiBC,IAAAA,YAAjB;AAA+BC,IAAAA;AAA/B,MAAiDd,UAAU,CAACK,cAAD,CAAjE;AACA,QAAMU,QAAQ,GAAGZ,WAAW,GAAGa,QAA/B;;AAEA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAIL,aAAJ,EAAmB;AACjBC,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;AACF,GAND;;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,QAAQ,CAACG,QAAT,CAAkB,SAAlB,CAAJ,EAAkC;AAChCJ,MAAAA,aAAa,CAAC,MAAD,CAAb;AACD,KAFD,MAEO;AACLA,MAAAA,aAAa,CAAC,OAAD,CAAb;AACD;AACF,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAGK,WADR;AAEE,IAAA,GAAG,EAAC,SAFN;AAGE,mBAAY,iBAHd;AAIE,IAAA,SAAS,EAAC,aAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eASE;AAAI,mBAAY,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BV,KAA9B,CATF,EAUIE,cAAc,gBAEZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAGS,UADR;AAEE,IAAA,GAAG,EAAC,QAFN;AAGE,mBAAY,gBAHd;AAIE,IAAA,SAAS,EAAC,aAJZ;AAKE,IAAA,OAAO,EAAGH,eALZ;AAME,mBAAY,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFY,gBAYV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBR,eAuBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,aAAa,gBAAG,oBAAC,SAAD;AAAW,IAAA,QAAQ,EAAGF,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,GAAyC,IADzD,CAvBF,CADF;AA6BD;;AAEDH,MAAM,CAACc,SAAP,GAAmB;AACjBX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,IAAV,CAAeC,UADR;AAEjBd,EAAAA,KAAK,EAAEL,SAAS,CAACoB,MAAV,CAAiBD,UAFP;AAGjBZ,EAAAA,cAAc,EAAEP,SAAS,CAACqB,IAAV,CAAeF;AAHd,CAAnB;AAMA,eAAehB,MAAf","sourcesContent":["import React, { useContext, useEffect } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport ContextRecipes from '../context/ContextRecipes';\nimport profileIcon from '../images/profileIcon.svg';\nimport searchIcon from '../images/searchIcon.svg';\nimport SearchBar from './SearchBar';\nimport '../styles/login.css';\n\nfunction Header(props) {\n  const { title, fetchApi, showSearchIcon = false } = props;\n  const { showSearchBar, setSearchBar, setTypeRecipe } = useContext(ContextRecipes);\n  const location = useLocation().pathname;\n\n  const toggleSearchBar = () => {\n    if (showSearchBar) {\n      setSearchBar(false);\n    } else {\n      setSearchBar(true);\n    }\n  };\n\n  useEffect(() => {\n    if (location.includes('comidas')) {\n      setTypeRecipe('food');\n    } else {\n      setTypeRecipe('drink');\n    }\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Link to=\"/perfil\">\n        <img\n          src={ profileIcon }\n          alt=\"Profile\"\n          data-testid=\"profile-top-btn\"\n          className=\"icon-perfil\"\n        />\n      </Link>\n      <h2 data-testid=\"page-title\">{title}</h2>\n      { showSearchIcon\n        ? (\n          <div>\n            <img\n              src={ searchIcon }\n              alt=\"Search\"\n              data-testid=\"search-top-btn\"\n              className=\"icon-search\"\n              onClick={ toggleSearchBar }\n              aria-hidden=\"true\"\n            />\n          </div>\n        ) : <div /> }\n      <div>\n        {showSearchBar ? <SearchBar fetchApi={ fetchApi } /> : null}\n      </div>\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  fetchApi: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n  showSearchIcon: PropTypes.bool.isRequired,\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}