{"ast":null,"code":"var _jsxFileName = \"/home/jederson/trybe/project-recipes/src/pages/ExploreByIngredients.js\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport ContextRecipes from '../context/ContextRecipes';\nimport { fetchAPIDrinks, fetchAPIRecipes } from '../services';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction ExploreByIngredients() {\n  const location = useLocation().pathname;\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const MAX_NUMBER_OF_CARDS = 12;\n  const {\n    setRecipes\n  } = useContext(ContextRecipes);\n\n  const apiIngredients = async () => {\n    if (location.includes('comidas')) {\n      const apiRequest = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n      const response = await apiRequest.json();\n      setData(response.meals);\n    } else {\n      const apiRequest = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n      const response = await apiRequest.json();\n      setData(response.drinks);\n    }\n  };\n\n  const handleClick = async selectIngredient => {\n    if (location.includes('comidas')) {\n      const recipesApi = await fetchAPIRecipes('ingredient', selectIngredient);\n      setRecipes(recipesApi);\n      history.push('/comidas');\n    } else {\n      const recipesApi = await fetchAPIDrinks('ingredient', selectIngredient);\n      setRecipes(recipesApi);\n      history.push('/bebidas');\n    }\n  };\n\n  useEffect(() => {\n    apiIngredients();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    title: \"Explorar Ingredientes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), location.includes('comidas') ? data.map((meals, index) => /*#__PURE__*/React.createElement(\"div\", {\n    type: \"button\",\n    key: index,\n    \"data-testid\": `${index}-ingredient-card`,\n    onClick: () => handleClick(meals.strIngredient),\n    onKeyPress: handleClick,\n    role: \"button\",\n    tabIndex: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    alt: \"food\",\n    src: `https://www.themealdb.com/images/ingredients/${meals.strIngredient}-Small.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, meals.strIngredient))).filter((_, index) => index < MAX_NUMBER_OF_CARDS) : data.map((drinks, index) => /*#__PURE__*/React.createElement(\"div\", {\n    type: \"button\",\n    key: index,\n    \"data-testid\": `${index}-ingredient-card`,\n    onClick: () => handleClick(drinks.strIngredient1),\n    onKeyPress: handleClick,\n    role: \"button\",\n    tabIndex: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    \"data-testid\": `${index}-card-img`,\n    alt: \"drink\",\n    src: `https://www.thecocktaildb.com/images/ingredients/${drinks.strIngredient1}-Small.png`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    \"data-testid\": `${index}-card-name`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, drinks.strIngredient1))).filter((_, index) => index < MAX_NUMBER_OF_CARDS), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default ExploreByIngredients;","map":{"version":3,"sources":["/home/jederson/trybe/project-recipes/src/pages/ExploreByIngredients.js"],"names":["React","useEffect","useState","useContext","useLocation","useHistory","ContextRecipes","fetchAPIDrinks","fetchAPIRecipes","Footer","Header","ExploreByIngredients","location","pathname","history","data","setData","MAX_NUMBER_OF_CARDS","setRecipes","apiIngredients","includes","apiRequest","fetch","response","json","meals","drinks","handleClick","selectIngredient","recipesApi","push","map","index","strIngredient","filter","_","strIngredient1"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport ContextRecipes from '../context/ContextRecipes';\nimport { fetchAPIDrinks, fetchAPIRecipes } from '../services';\nimport Footer from '../components/Footer';\nimport Header from '../components/Header';\n\nfunction ExploreByIngredients() {\n  const location = useLocation().pathname;\n  const history = useHistory();\n  const [data, setData] = useState([]);\n  const MAX_NUMBER_OF_CARDS = 12;\n  const { setRecipes } = useContext(ContextRecipes);\n\n  const apiIngredients = async () => {\n    if (location.includes('comidas')) {\n      const apiRequest = await fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list');\n      const response = await apiRequest.json();\n      setData(response.meals);\n    } else {\n      const apiRequest = await fetch('https://www.thecocktaildb.com/api/json/v1/1/list.php?i=list');\n      const response = await apiRequest.json();\n      setData(response.drinks);\n    }\n  };\n\n  const handleClick = async (selectIngredient) => {\n    if (location.includes('comidas')) {\n      const recipesApi = await fetchAPIRecipes('ingredient', selectIngredient);\n      setRecipes(recipesApi);\n      history.push('/comidas');\n    } else {\n      const recipesApi = await fetchAPIDrinks('ingredient', selectIngredient);\n      setRecipes(recipesApi);\n      history.push('/bebidas');\n    }\n  };\n\n  useEffect(() => {\n    apiIngredients();\n  }, []);\n\n  return (\n    <div>\n      <Header title=\"Explorar Ingredientes\" />\n      { location.includes('comidas') ? (\n        data.map((meals, index) => (\n          <div\n            type=\"button\"\n            key={ index }\n            data-testid={ `${index}-ingredient-card` }\n            onClick={ () => handleClick(meals.strIngredient) }\n            onKeyPress={ handleClick }\n            role=\"button\"\n            tabIndex=\"0\"\n          >\n            <img\n              data-testid={ `${index}-card-img` }\n              alt=\"food\"\n              src={ `https://www.themealdb.com/images/ingredients/${meals.strIngredient}-Small.png` }\n            />\n            <h3\n              data-testid={ `${index}-card-name` }\n            >\n              { meals.strIngredient }\n            </h3>\n          </div>\n        )).filter((_, index) => index < MAX_NUMBER_OF_CARDS)\n      ) : (\n        data.map((drinks, index) => (\n          <div\n            type=\"button\"\n            key={ index }\n            data-testid={ `${index}-ingredient-card` }\n            onClick={ () => handleClick(drinks.strIngredient1) }\n            onKeyPress={ handleClick }\n            role=\"button\"\n            tabIndex=\"0\"\n          >\n            <img\n              data-testid={ `${index}-card-img` }\n              alt=\"drink\"\n              src={ `https://www.thecocktaildb.com/images/ingredients/${drinks.strIngredient1}-Small.png` }\n            />\n            <h3\n              data-testid={ `${index}-card-name` }\n            >\n              { drinks.strIngredient1 }\n            </h3>\n          </div>\n        )).filter((_, index) => index < MAX_NUMBER_OF_CARDS)\n      ) }\n      <Footer />\n    </div>\n  );\n}\n\nexport default ExploreByIngredients;\n"]},"metadata":{},"sourceType":"module"}